{"version":3,"file":"parse.js","sources":["../src/parsers/date.js","../src/parsers/time.js","../src/parsers/index.js","../src/parsers/list.js","../src/parse.js","../src/parsers/duration.js"],"sourcesContent":["'use strict'\n\nimport { parse, isMatch } from 'date-fns'\nimport { zonedTimeToUtc } from 'date-fns-tz/esm'\n\nconst loc = 'UTC'\nconst commonDateFormats = [\n  'yyyy-MM-dd',\n  'dd/MM/yyyy',\n  'dd/MM/yy',\n  'dd-MM-yyyy',\n  'dd-MM-yy',\n  'dd.MM.yyyy',\n  'dd.MM.yy'\n]\n\nexport default function parseDate(text) {\n  const match = commonDateFormats.map((format) => {\n    return isMatch(text, format)\n  })\n  if (match.indexOf(true) > -1) {\n    const date = zonedTimeToUtc(\n      parse(text, commonDateFormats[match.indexOf(true)], new Date()),\n      loc\n    ).toJSON()\n    return date.split('T')[0]\n  } else {\n    return null\n  }\n}\n","'use strict'\n\nimport { parse, isMatch } from 'date-fns'\nimport { zonedTimeToUtc, formatInTimeZone } from 'date-fns-tz/esm'\n\nconst loc = 'UTC'\nconst commonTimeFormats = ['HH:mm', 'HH.mm', 'hh:mm a', 'hh:mm A']\n\nexport default function parseTime(text) {\n  const match = commonTimeFormats.map((format) => {\n    return isMatch(text, format)\n  })\n  if (match.indexOf(true) > -1) {\n    const time = zonedTimeToUtc(\n      parse(text, commonTimeFormats[match.indexOf(true)], new Date()),\n      loc\n    )\n    return formatInTimeZone(time, loc, 'HH:mm')\n  } else {\n    return null\n  }\n}\n","'use strict'\n\nimport date from './date.js'\nimport time from './time.js'\nimport duration from './duration.js'\nimport list from './list.js'\n\nexport const parseDate = date\nexport const parseTime = time\nexport const parseDuration = duration\nexport const parseList = list\n","'use strict'\n\nexport default function parseList(list) {\n  return list.children\n    .map((item) => {\n      const listItem = {}\n      if (item.type === 'list') {\n        return parseList(list)\n      } else if (item.type === 'listItem') {\n        listItem.checked = item.checked\n        return item.children\n          .map((child) => {\n            if (child.type === 'paragraph') {\n              listItem.text = child.children\n                .map((c) => {\n                  if (c.type === 'link') {\n                    return c.children[0].value\n                  } else {\n                    return c.value\n                  }\n                })\n                .filter((x) => !!x)\n                .join('')\n              return listItem\n            }\n          })\n          .filter((x) => !!x)\n      }\n    })\n    .filter((x) => !!x)\n}\n","'use strict'\n\nimport { unified } from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkGfm from 'remark-gfm'\nimport slugify from '@sindresorhus/slugify'\nimport remarkStringify from 'remark-stringify'\nimport stripFinalNewline from 'strip-final-newline'\n\nimport {\n  parseDate,\n  parseTime,\n  parseDuration,\n  parseList\n} from './parsers/index.js'\n\nexport default async function parseMD(body) {\n  const tokens = await unified().use(remarkParse).use(remarkGfm).parse(body)\n  if (!tokens) {\n    return []\n  }\n\n  const structuredResponse = {}\n  let currentHeading = null\n  for (const token of tokens.children) {\n    const text = await unified()\n      .use(remarkGfm)\n      .use(remarkStringify)\n      .stringify(token)\n    let cleanText = stripFinalNewline(text)\n\n    // remove `\\\\_`\n    if (cleanText.indexOf('\\\\_') > -1) {\n      cleanText = cleanText.replace(/\\\\_/g, '_')\n    }\n\n    // issue forms uses h3 as a heading\n    if (token.type === 'heading' && token.depth === 3) {\n      currentHeading = slugify(token.children[0].value)\n      structuredResponse[currentHeading] = {\n        title: token.children[0].value,\n        content: []\n      }\n    } else if (token.type === 'paragraph' && currentHeading) {\n      const obj = structuredResponse[currentHeading]\n\n      const date = parseDate(cleanText)\n      const time = parseTime(cleanText)\n      const duration = parseDuration(cleanText)\n\n      if (date) {\n        obj.date = date\n      }\n\n      if (time) {\n        obj.time = time\n      }\n\n      if (duration) {\n        obj.duration = duration\n      }\n\n      obj.content.push(cleanText)\n    } else if (token.type === 'list') {\n      const obj = structuredResponse[currentHeading]\n      obj.text = cleanText\n      obj.list = parseList(token).flat()\n    } else if (token.type === 'html') {\n      const obj = structuredResponse[currentHeading]\n      obj.content.push(token.html)\n    } else if (token.type === 'code') {\n      const obj = structuredResponse[currentHeading]\n      obj.lang = token.lang\n      obj.text = cleanText\n    } else if (token.type === 'heading' && token.depth > 3) {\n      const obj = structuredResponse[currentHeading]\n      obj.content.push(token.children[0].value)\n    } else {\n      if(process.env.DEBUG){\n        console.log('unhandled token type')\n        console.log(token)  \n      }\n    }\n  }\n\n  for (const key in structuredResponse) {\n    const token = structuredResponse[key]\n    const content = token.content.filter(Boolean)\n    if (content && content.length > 0) {\n      if (content.length === 1) {\n        token.text = content[0]\n      }\n      token.text = content.join('\\n\\n')\n    }\n    token.content = content\n  }\n\n  return structuredResponse\n}\n","'use strict'\n\nexport default function parseDuration(text) {\n  let matched = false\n  const duration = {\n    hours: 0,\n    minutes: 0\n  }\n\n  const hoursAndMinutes = new RegExp(/([0-9]+)h([0-9]+)m/)\n  const hours = new RegExp(/([0-9]+)h/)\n\n  if (text.match(hoursAndMinutes)) {\n    matched = true\n    const [, h, m] = text.match(hoursAndMinutes)\n    duration.hours = parseInt(h)\n    duration.minutes = parseInt(m)\n  } else if (text.match(hours)) {\n    matched = true\n    const [, h] = text.match(hours)\n    duration.hours = parseInt(h)\n    duration.minutes = 0\n  }\n\n  if (matched) {\n    return duration\n  } else {\n    return null\n  }\n}\n"],"names":["commonDateFormats","commonTimeFormats","parseList","list","children","map","item","listItem","type","checked","child","text","c","value","filter","x","join","_settle","pact","state","s","_Pact","o","bind","v","then","observer","parseMD","body","token","cleanText","obj","date","time","duration","key","content","unified","use","remarkParse","remarkGfm","parse","tokens","_temp2","structuredResponse","Boolean","length","currentHeading","_iterator","_createForOfIteratorHelperLoose","_temp","test","update","stage","shouldContinue","_isSettledPact","result","reject","_resumeAfterTest","_resumeAfterBody","updateValue","_for","_step","done","Promise","resolve","remarkStringify","stringify","_unified$use$use$stri","match","stripFinalNewline","indexOf","replace","depth","slugify","title","format","isMatch","zonedTimeToUtc","Date","toJSON","split","parseTime","formatInTimeZone","matched","hours","minutes","hoursAndMinutes","RegExp","_text$match","m","parseInt","parseDuration","push","flat","html","lang","process","env","DEBUG","console","log","prototype","onFulfilled","onRejected","this","callback","e","_this","thenable"],"mappings":"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"}